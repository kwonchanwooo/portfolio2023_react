{"ast":null,"code":"import { combineReducers } from 'redux';\nimport * as types from './actionType';\nconst videoReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    video: []\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case types.VIDEO.start:\n      return state;\n    case types.VIDEO.success:\n      return {\n        ...state,\n        video: action.payload\n      };\n    case types.VIDEO.fail:\n      return {\n        ...state,\n        video: action.payload\n      };\n    default:\n      return state;\n  }\n};\nconst flickerReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    flicker: []\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case types.FLICKER.start:\n      return state;\n    case types.FLICKER.success:\n      return {\n        ...state,\n        flicker: action.payload\n      };\n    case types.FLICKER.fail:\n      return {\n        ...state,\n        flicker: action.payload\n      };\n    default:\n      return state;\n  }\n};\nconst reducers = combineReducers({\n  videoReducer,\n  flickerReducer\n});\nexport default reducers;","map":{"version":3,"names":["combineReducers","types","videoReducer","state","video","action","type","VIDEO","start","success","payload","fail","flickerReducer","flicker","FLICKER","reducers"],"sources":["/Users/home/20230108/리액트 포트폴리오/src/redux/reducer.js"],"sourcesContent":["import { combineReducers } from 'redux';\nimport * as types from './actionType';\n\nconst videoReducer = (state = { video: [] }, action) => {\n\tswitch (action.type) {\n\t\tcase types.VIDEO.start:\n\t\t\treturn state;\n\t\tcase types.VIDEO.success:\n\t\t\treturn { ...state, video: action.payload };\n\t\tcase types.VIDEO.fail:\n\t\t\treturn { ...state, video: action.payload };\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nconst flickerReducer = (state = { flicker: [] }, action) => {\n\tswitch (action.type) {\n\t\tcase types.FLICKER.start:\n\t\t\treturn state;\n\t\tcase types.FLICKER.success:\n\t\t\treturn { ...state, flicker: action.payload };\n\t\tcase types.FLICKER.fail:\n\t\t\treturn { ...state, flicker: action.payload };\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\nconst reducers = combineReducers({ videoReducer, flickerReducer });\nexport default reducers;\n"],"mappings":"AAAA,SAASA,eAAe,QAAQ,OAAO;AACvC,OAAO,KAAKC,KAAK,MAAM,cAAc;AAErC,MAAMC,YAAY,GAAG,YAAmC;EAAA,IAAlCC,KAAK,uEAAG;IAAEC,KAAK,EAAE;EAAG,CAAC;EAAA,IAAEC,MAAM;EAClD,QAAQA,MAAM,CAACC,IAAI;IAClB,KAAKL,KAAK,CAACM,KAAK,CAACC,KAAK;MACrB,OAAOL,KAAK;IACb,KAAKF,KAAK,CAACM,KAAK,CAACE,OAAO;MACvB,OAAO;QAAE,GAAGN,KAAK;QAAEC,KAAK,EAAEC,MAAM,CAACK;MAAQ,CAAC;IAC3C,KAAKT,KAAK,CAACM,KAAK,CAACI,IAAI;MACpB,OAAO;QAAE,GAAGR,KAAK;QAAEC,KAAK,EAAEC,MAAM,CAACK;MAAQ,CAAC;IAC3C;MACC,OAAOP,KAAK;EAAC;AAEhB,CAAC;AAED,MAAMS,cAAc,GAAG,YAAqC;EAAA,IAApCT,KAAK,uEAAG;IAAEU,OAAO,EAAE;EAAG,CAAC;EAAA,IAAER,MAAM;EACtD,QAAQA,MAAM,CAACC,IAAI;IAClB,KAAKL,KAAK,CAACa,OAAO,CAACN,KAAK;MACvB,OAAOL,KAAK;IACb,KAAKF,KAAK,CAACa,OAAO,CAACL,OAAO;MACzB,OAAO;QAAE,GAAGN,KAAK;QAAEU,OAAO,EAAER,MAAM,CAACK;MAAQ,CAAC;IAC7C,KAAKT,KAAK,CAACa,OAAO,CAACH,IAAI;MACtB,OAAO;QAAE,GAAGR,KAAK;QAAEU,OAAO,EAAER,MAAM,CAACK;MAAQ,CAAC;IAC7C;MACC,OAAOP,KAAK;EAAC;AAEhB,CAAC;AACD,MAAMY,QAAQ,GAAGf,eAAe,CAAC;EAAEE,YAAY;EAAEU;AAAe,CAAC,CAAC;AAClE,eAAeG,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}